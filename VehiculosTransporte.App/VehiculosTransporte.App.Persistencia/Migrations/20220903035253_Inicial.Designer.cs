// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehiculosTransporte.App.Persistencia;

namespace VehiculosTransporte.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220903035253_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Conductor", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.Property<string>("CiudadResidencia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Conductor_CiudadResidencia");

                    b.Property<string>("Licencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Conductor");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Dueño", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.Property<string>("CiudadResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Dueño");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Jefe_operaciones", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.Property<string>("EmailTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Jefe_operaciones");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Mecanico", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.Property<string>("NivelEstudios")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Mecanico");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Transporte", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.Property<string>("CapacidadPasajeros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Conductorid")
                        .HasColumnType("int");

                    b.Property<int?>("Dueñoid")
                        .HasColumnType("int");

                    b.Property<int?>("Mecanicoid")
                        .HasColumnType("int");

                    b.Property<string>("PaisOrigen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cilindraje_motor")
                        .HasColumnType("int");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo_año")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("placa")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("Conductorid");

                    b.HasIndex("Dueñoid");

                    b.HasIndex("Mecanicoid");

                    b.HasDiscriminator().HasValue("Transporte");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Repuestos", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Jefe_operaciones");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justificación")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRepuesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Repuestos");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Revisiones_vehiculo", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Transporte");

                    b.Property<string>("NivelAceite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelLiquidoDireccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelLiquidoFrenos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelRefrigerante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevisionTecnicoMecanica")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Revisiones_vehiculo");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Seguros", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Transporte");

                    b.Property<DateTime>("Soat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("seguro_contractual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("seguro_extracontractual")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Seguros");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Transporte", b =>
                {
                    b.HasOne("VehiculosTransporte.App.Dominio.Conductor", "Conductor")
                        .WithMany()
                        .HasForeignKey("Conductorid");

                    b.HasOne("VehiculosTransporte.App.Dominio.Dueño", "Dueño")
                        .WithMany()
                        .HasForeignKey("Dueñoid");

                    b.HasOne("VehiculosTransporte.App.Dominio.Mecanico", "Mecanico")
                        .WithMany()
                        .HasForeignKey("Mecanicoid");

                    b.Navigation("Conductor");

                    b.Navigation("Dueño");

                    b.Navigation("Mecanico");
                });
#pragma warning restore 612, 618
        }
    }
}
